"""Create baseline migrations

Revision ID: 1f5ca7855a28
Revises: 
Create Date: 2024-04-26 11:44:45.105252

"""
from typing import Sequence, Union
import os
import json
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '1f5ca7855a28'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

def upgrade() -> None:
    
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users')
    op.drop_index('ix_locations_id', table_name='locations')
    op.drop_table('locations')

    locations = op.create_table('locations',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('state', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('county', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('street_address', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('country', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='locations_pkey')
    )
    op.create_index('ix_locations_id', 'locations', ['id'], unique=False)


    with open(os.path.join(os.path.dirname(__file__), "../seed_data/locations.json")) as f:
        locations_data = f.read()
    
    op.bulk_insert(locations, json.loads(locations_data))
    
    users = op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('age', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('bio', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('address', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['address'], ['locations.id'], name='users_address_fkey'),
    sa.PrimaryKeyConstraint('id', name='users_pkey')
    )

    op.create_index('ix_users_id', 'users', ['id'], unique=False)

    with open(os.path.join(os.path.dirname(__file__), "../seed_data/users.json")) as f:
        users_data = f.read()
    
        op.bulk_insert(users, json.loads(users_data))


    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_users_id', table_name='users')
    op.drop_table('users')
    op.drop_index('ix_locations_id', table_name='locations')
    op.drop_table('locations')
    # ### end Alembic commands ###
